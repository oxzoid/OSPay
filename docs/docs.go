// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/debug/metrics": {
            "get": {
                "description": "Returns in-memory metrics counters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "debug"
                ],
                "summary": "Get debug metrics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                }
            }
        },
        "/events/payment-detected": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Notify the system of an on-chain payment for an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Detect payment event",
                "parameters": [
                    {
                        "description": "Payment info",
                        "name": "payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.paymentDetectedReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.paymentDetectedResp"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/api.paymentDetectedResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/merchants": {
            "post": {
                "description": "Creates a new merchant and returns the merchant ID and API key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merchants"
                ],
                "summary": "Create a new merchant",
                "parameters": [
                    {
                        "description": "Merchant info",
                        "name": "merchant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.MerchantCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.MerchantCreateResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/orders": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new payment order for a merchant\nCreates a new payment order for a merchant",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "orders",
                    "orders"
                ],
                "summary": "Create a new order",
                "parameters": [
                    {
                        "description": "Order info",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.orderCreateReq"
                        }
                    },
                    {
                        "description": "Order info",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.orderCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.orderCreateResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/orders/get": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns order details for a given order ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get order by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.orderGetResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/orders/refund": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Refunds a paid order by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Refund an order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Refund info",
                        "name": "refund",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.refundReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.refundResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reconciliation": {
            "get": {
                "description": "Returns balance and settlement data for a merchant and asset",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reconciliation"
                ],
                "summary": "Get reconciliation data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Merchant ID",
                        "name": "merchant_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Asset symbol",
                        "name": "asset",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.MerchantCreateReq": {
            "description": "Request to create a new merchant",
            "type": "object",
            "properties": {
                "merchant_wallet_address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.MerchantCreateResp": {
            "description": "Response after creating a merchant",
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "merchant_wallet_address": {
                    "type": "string"
                }
            }
        },
        "api.orderCreateReq": {
            "type": "object",
            "properties": {
                "amount_minor": {
                    "type": "integer"
                },
                "asset": {
                    "description": "e.g., \"USDC\"",
                    "type": "string"
                },
                "chain": {
                    "description": "e.g., \"polygon-amoy\"",
                    "type": "string"
                },
                "idempotency_key": {
                    "type": "string"
                },
                "merchant_id": {
                    "type": "string"
                }
            }
        },
        "api.orderCreateResp": {
            "type": "object",
            "properties": {
                "deposit_address": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.orderGetResp": {
            "type": "object",
            "properties": {
                "amount_minor": {
                    "type": "integer"
                },
                "asset": {
                    "type": "string"
                },
                "chain": {
                    "type": "string"
                },
                "confirmed_block": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deposit_address": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "merchant_id": {
                    "type": "string"
                },
                "paid_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                }
            }
        },
        "api.paymentDetectedReq": {
            "type": "object",
            "properties": {
                "amount_minor": {
                    "description": "optional override; if nil, use order.amount_minor",
                    "type": "integer"
                },
                "order_id": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                }
            }
        },
        "api.paymentDetectedResp": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.refundReq": {
            "type": "object",
            "properties": {
                "amount_minor": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "string"
                },
                "refund_idempotency_key": {
                    "type": "string"
                },
                "refundtxhash": {
                    "type": "string"
                }
            }
        },
        "api.refundResp": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "OSPay API",
	Description:      "Crypto payment processor API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
